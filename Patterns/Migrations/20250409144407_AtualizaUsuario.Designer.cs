// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Patterns.db_context;

namespace Patterns.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250409144407_AtualizaUsuario")]
    partial class AtualizaUsuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Patterns.Models.Assunto", b =>
                {
                    b.Property<int>("cod_assunto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("cod_assunto");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Patterns.Models.Postagem", b =>
                {
                    b.Property<int>("cod_post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("Assuntocod_assunto")
                        .HasColumnType("integer");

                    b.Property<int>("cod_assunto")
                        .HasColumnType("integer");

                    b.Property<int>("cod_sub")
                        .HasColumnType("integer");

                    b.Property<int>("cod_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("conteudo")
                        .IsRequired()
                        .HasMaxLength(20000)
                        .HasColumnType("character varying(20000)");

                    b.Property<DateTime>("data_post")
                        .HasColumnType("date");

                    b.HasKey("cod_post");

                    b.HasIndex("Assuntocod_assunto");

                    b.HasIndex("cod_assunto");

                    b.HasIndex("cod_sub");

                    b.HasIndex("cod_usuario");

                    b.ToTable("Postagem");
                });

            modelBuilder.Entity("Patterns.Models.Sub_Iten", b =>
                {
                    b.Property<int>("cod_sub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("cod_sub");

                    b.ToTable("Sub_Iten");
                });

            modelBuilder.Entity("Patterns.Models.Usuario", b =>
                {
                    b.Property<int>("cod_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cod_usuario")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<bool>("ind_admin")
                        .HasColumnType("boolean")
                        .HasColumnName("ind_admin");

                    b.HasKey("cod_usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Patterns.Models.Postagem", b =>
                {
                    b.HasOne("Patterns.Models.Assunto", null)
                        .WithMany("Postagens")
                        .HasForeignKey("Assuntocod_assunto");

                    b.HasOne("Patterns.Models.Assunto", "Assunto")
                        .WithMany()
                        .HasForeignKey("cod_assunto")
                        .HasConstraintName("fk_postagem_assunto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patterns.Models.Sub_Iten", "sub_iten")
                        .WithMany("Postagens")
                        .HasForeignKey("cod_sub")
                        .HasConstraintName("fk_postagem_subiten")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patterns.Models.Usuario", "autor")
                        .WithMany("Postagens")
                        .HasForeignKey("cod_usuario")
                        .HasConstraintName("fk_postagem_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("autor");

                    b.Navigation("sub_iten");
                });

            modelBuilder.Entity("Patterns.Models.Assunto", b =>
                {
                    b.Navigation("Postagens");
                });

            modelBuilder.Entity("Patterns.Models.Sub_Iten", b =>
                {
                    b.Navigation("Postagens");
                });

            modelBuilder.Entity("Patterns.Models.Usuario", b =>
                {
                    b.Navigation("Postagens");
                });
#pragma warning restore 612, 618
        }
    }
}
